<launch>

	<!-- domain file -->
	<param name="domain_path" value="$(find squirrel_planning_launch)/common/domain_push.pddl" />

	<!-- knowledge base -->
	<node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false" output="screen">
	</node>

	<!-- scene database (MongoDB) -->
	<node name="rosplan_scene_database" pkg="mongodb_store" type="mongodb_server.py" respawn="false" output="log">
	    <param name="database_path" value="$(find rosplan_knowledge_base)/common/mongoDB" />
	</node>
	<node name="rosplan_scene_message_store" pkg="mongodb_store" type="message_store_node.py" respawn="false" output="log">
	</node>

	<!-- planning system -->
	<node name="rosplan_planning_system" pkg="rosplan_planning_system" type="planner" respawn="false" output="screen">
		<!-- directory for generated files -->
	    <param name="data_path" value="$(find squirrel_planning_launch)/common/" />
	    <param name="problem_path" value="$(find squirrel_planning_launch)/common/problem.pddl" />
		<!-- to run the planner -->
	    <param name="planner_command" value="timeout 10 $(find rosplan_planning_system)/common/bin/popf -n" />
	</node>

	<!-- standard ROS interfaces -->
	<node name="rosplan_interface_movebase" pkg="rosplan_interface_movebase" type="rpmovebase" respawn="false" output="screen">
	</node>
	<node name="rosplan_interface_mapping" pkg="rosplan_interface_mapping" type="rproadmapServer" respawn="false" output="screen">
	    <param name="data_path" value="$(find squirrel_planning_launch)/common/" />
	    <param name="cost_map_topic" value="/move_base/global_costmap/costmap" />
	    <param name="cost_map_update_topic" value="/move_base/global_costmap/costmap_updates" />
	    <param name="odom_topic" value="/odom" />
	    <param name="use_static_map" value="false" />
	    <param name="static_map_service" value="/static_map" />
	</node>

	<!-- SQUIRREL interfaces -->
	<node name="squirrel_object_server" pkg="squirrel_interface_perception" type="rpObjectPerception" respawn="false" output="screen"></node>
	<node name="squirrel_interface_hri" pkg="squirrel_interface_hri" type="rppointingServer" respawn="false" output="screen"></node>

	<node name="squirrel_interface_perception" pkg="squirrel_interface_perception" type="rpperceptionServer" respawn="false" output="screen">
		<!-- set "true" if you wantto fake object perception completely -->
		<param name="simulate_perception" type="bool" value="false" />
	</node>

	<node name="squirrel_interface_manipulation" pkg="squirrel_interface_manipulation" type="rppushServer" respawn="false" output="screen">
		<!-- set "true" if you want to simply move instead of pushing -->
		<param name="simulate_pushing" type="bool" value="false" />
		<param name="push_action_server" value="/push" />
		<param name="smash_action_server" value="/smash" />
	</node>

	<node name="squirrel_interface_mapping" pkg="squirrel_planning_execution" type="rpsquirrelRoadmap" respawn="false" output="screen">
	    <param name="data_path" value="$(find squirrel_planning_launch)/common/" />
	    <param name="cost_map_topic" value="/move_base/global_costmap/costmap" />
	    <param name="cost_map_topic" value="/move_base/global_costmap/costmap_updates" />
	    <param name="use_static_map" value="false" type="bool" />
	    <param name="static_map_service" value="/static_map" />
	    <param name="occupancy_threshold" value="20" />
	    <param name="manipulation_service_topic" value="/squirrel_manipulation/waypoint_request" />
	</node>

</launch>
